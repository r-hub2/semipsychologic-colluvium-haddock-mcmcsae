% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TMVN_methods.R
\name{TMVN-methods}
\alias{TMVN-methods}
\alias{m_direct}
\alias{m_Gibbs}
\alias{m_HMC}
\alias{m_HMCZigZag}
\alias{m_softTMVN}
\title{Functions for specifying the method and corresponding options for sampling
from a possibly truncated and degenerate multivariate normal distribution}
\usage{
m_direct(use.cholV = NULL)

m_Gibbs(slice = FALSE, eps = sqrt(.Machine$double.eps), diagnostic = FALSE)

m_HMC(Tsim = pi/2, max.events = .Machine$integer.max, diagnostic = FALSE)

m_HMCZigZag(
  Tsim = 1,
  rate = 1,
  prec.eq = NULL,
  diagnostic = FALSE,
  max.events = .Machine$integer.max,
  adapt = FALSE
)

m_softTMVN(
  sharpness = 100,
  useV = FALSE,
  CG = NULL,
  PG.approx = TRUE,
  PG.approx.m = -2L
)
}
\arguments{
\item{use.cholV}{whether to use the Cholesky factor of the variance instead
of precision matrix for sampling. If \code{NULL} the choice is made based on a
simple heuristic.}

\item{slice}{if \code{TRUE}, a Gibbs within slice sampler is used.}

\item{eps}{small positive value to control numerical robustness of the algorithm.}

\item{diagnostic}{whether information about violations of inequalities, bounces
off inequality walls (for 'HMC' and 'HMCZigZag' methods) or gradient events
(for 'HMCZigZag') is printed to the screen.}

\item{Tsim}{the duration of a Hamiltonian Monte Carlo simulated particle trajectory.
This can be specified as either a single positive numeric value for a fixed
simulation time, or as a function that is applied in each MCMC iteration to
generates a simulation time.}

\item{max.events}{maximum number of events (reflections off inequality walls
and for method 'HMCZigZag' also gradient events). Default is unlimited.
Specifying a finite number may speed up the sampling but may also result
in a biased sampling algorithm.}

\item{rate}{vector of Laplace rate parameters for method 'HMCZigZag'. It must be
a positive numeric vector of length one or the number of variables.}

\item{prec.eq}{positive numeric vector of length 1 or the number of equality restrictions,
to control the precision with which the equality restrictions are imposed; the larger
\code{prec.eq} the more precisely they will be imposed.}

\item{adapt}{experimental feature: if \code{TRUE} the rate parameter will be adapted
in an attempt to make the sampling algorithm more efficient.}

\item{sharpness}{for method 'softTMVN', the sharpness of the soft inequalities; the larger the better
the approximation of exact inequalities. It must be a positive numeric vector of length
one or the number of inequality restrictions.}

\item{useV}{for method 'softTMVN' whether to base computations on variance instead of precision
matrices.}

\item{CG}{use a conjugate gradient iterative algorithm instead of Cholesky updates for sampling
the model's coefficients. This must be a list with possible components \code{max.it},
\code{stop.criterion}, \code{verbose}. See the help for function \code{\link{CG_control}},
which can be used to specify these options. Currently the preconditioner and scale
options cannot be set for this use case.}

\item{PG.approx}{see \code{\link{sampler_control}}.}

\item{PG.approx.m}{see \code{\link{sampler_control}}.}
}
\value{
A method object, for internal use only.
}
\description{
These functions are intended for use in the \code{method} argument of \code{\link{create_TMVN_sampler}}.
}
